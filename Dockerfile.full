FROM rust:1-alpine3.21 AS cache

ENV RUSTFLAGS="-C target-feature=-crt-static"
RUN apk add --no-cache musl-dev 
RUN apk add --no-cache libpq-dev
WORKDIR /app

# handle cache if possible here
COPY ./Cargo.toml /app
COPY ./Cargo.lock /app

COPY rust-toolchain.toml /app
COPY ./src/cache_helper.rs /app/src/cache_helper.rs
RUN cargo build --release --bin cache

FROM cache AS builder

COPY ./migrations /app/migrations
COPY ./src /app/src
# do a release build
RUN cargo build --release --bin server

# use a plain alpine image, the alpine version needs to match the builder
FROM alpine:3.21
# if needed, install additional dependencies here
RUN apk add --no-cache libgcc libpq-dev
# copy the binary into the final image
COPY --from=builder /app/target/release/server server
# set the binary as entrypoint
ENTRYPOINT ["/server"]

EXPOSE 4000